# -*- coding: utf-8 -*-
"""Assignment2Ques2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pMwZ013E4KRMi4NoaE9Iz3jyyDYPfJWm
"""

import pandas as pd
data = pd.read_csv('daily_data.csv')
lists=data['datetime'].tolist()
n=(int)(input("Enter the number of days of Roc required"))
stop_loss = 0.95
take_profit = 1.05

roc=[0]
for i in range(n, len(data['close'])-1):
    value = (data['close'][i] - data['close'][i-n]) / data['close'][i-n] * 100
    roc.append(value)
for i in range(0,n):
    roc.insert(0,-1)
data['roc'] = roc



nvi = [1]
for i in range(1, len(data)):
    if data['volume'][i] >= data['volume'][i - 1]:
        nvi.append(nvi[-1])
    else:
        nvi.append(nvi[-1] + (data['close'][i] - data['close'][i - 1]) / data['close'][i - 1] * nvi[-1])
data['nvi'] = nvi


def check_trend(price1, price2):
    if price1 >= price2:
        return True
    else:
        return False
hpeak = [data['close'][0]]
lpeak = [data['close'][0]]
k = 0
c1=0
priorep=0
af=0.02
psar=[0]
prevpsar=0
for i in range(1, len(data['close'])):
    if check_trend(data['close'][i], data['close'][i - 1]):
        if k == 2:

            psar.append(prevpsar+af*(priorep-prevpsar))
            prevpsar=prevpsar+af*(priorep-prevpsar)
        else:
            lpeak.append(data['close'][i - 1])
            priorep=data['close'][i-1]
            k = 2
            if c1<=10 :
              af=af+c1*0.02
              c1=c1+1
            else:
              af=0.2
            psar.append(prevpsar+af*(priorep-prevpsar))
            prevpsar=prevpsar+af*(priorep-prevpsar)
    else:
        if k == 1:


            psar.append(prevpsar-af*(priorep-prevpsar))
            prevpsar=prevpsar-af*(priorep-prevpsar)
        else :
            hpeak.append(data['close'][i - 1])
            priorep=data['close'][i-1]
            k = 1
            if c1<=10 :
              af=af+c1*0.02
              c1=c1+1
            else:
              af=0.2
            psar.append(prevpsar-af*(priorep-prevpsar))
            prevpsar=prevpsar-af*(priorep-prevpsar)
data['psar']=psar
Profit=0
capital=1000000
invested=0
profit=0
loss=0
amount=0
j=0
win=0
lost=0
for i in range(1, len(data)):
 if data['roc'][i] >= 0 and data['nvi'][i] >= data['nvi'][i - 1] and data['close'][i] >= data['psar'][i]:
     if amount==0:
       buyamount=(capital*0.8)/(data['close'][i])
       invested+=capital
       amount=buyamount
       takeprofit=1.05*data['close'][i]
       stoploss=0.95*data['close'][i]
       j=i
     elif amount>0:
       if(data['close'][i])<=takeprofit:
        profit=amount*(data['close'][i]-data['close'][j])
        capital+=profit
        invested=0
        Profit+=profit
        amount=0
        index=0
       elif(data['close'][i])>=stoploss:
        loss=amount*(data['close'][i]-data['close'][j])
        capital+=loss
        invested=0

        amount=0
        j=0
       buyamount=(capital*0.8)/(data['close'][i])
       amount=buyamount
       invested+=capital
       takeprofit=1.05*data['close'][i]
       stoploss=0.95*data['close'][i]
       j=i
 elif(data['close'][i])<=(data['close'][j]*1.05):
        profit=amount*(data['close'][i]-data['close'][j])
        capital+=profit
        Profit+=profit
        win+=1
        invested=0
        amount=0
        j=0
 elif(data['close'][i])>=(data['close'][j]*0.95):
        loss=amount*(data['close'][i]-data['close'][j])
        capital+=loss
        lost+=1
        invested=0
        amount=0
        j=0
print("Final Portfolio ",capital+invested)
print("Net Profit = ",capital+invested-1000000)
print("Total Profit ",abs(Profit))
print("Number of won trades ",win)
print("number of lost trades ",lost)