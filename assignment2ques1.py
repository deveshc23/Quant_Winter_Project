# -*- coding: utf-8 -*-
"""Assignment2Ques1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rpox4pgQMs9b82-zgJmkhoPsV8vvjBig
"""

import pandas as pd
import matplotlib.pyplot as plt


data = pd.read_csv('daily_data.csv')
data['datetime'] = pd.to_datetime(data['datetime'])

n = int(input("Enter the number of days of ROC required: "))
roc = [0]
for i in range(n, len(data['close'])-1):
    value = (data['close'][i] - data['close'][i-n]) / data['close'][i-n] * 100
    roc.append(value)

lists=data['datetime'].tolist()
plt.plot(lists[n:], roc)
plt.tight_layout()

plt.xlabel('Date')
plt.ylabel('Rate of Change (%)')

plt.show()


nvi=[1]
val_nvi=1
for i in range(1,len(data['close'])):

     if data.volume[i]>=data.volume[i-1]:
          nvi.append(nvi[i-1])
     else:
          nvi.append(nvi[i-1]+(data['close'][i] - data['close'][i-1]) / data['close'][i-1]*nvi[i-1])
plt.plot(lists, nvi)
plt.tight_layout()

plt.xlabel('Date')
plt.ylabel('Negative Volume Index ')

plt.show()


def check_trend(price1, price2):
    if price1 >= price2:
        return True
    else:
        return False

hpeak = [data['close'][0]]
lpeak = [data['close'][0]]
k = 0
c1=0
priorep=0
af=0.02
psar=[0]
prevpsar=0
for i in range(1, len(data['close'])):
    if check_trend(data['close'][i], data['close'][i - 1]):
        if k == 2:

            psar.append(prevpsar+af*(priorep-prevpsar))
            prevpsar=prevpsar+af*(priorep-prevpsar)
        else:
            lpeak.append(data['close'][i - 1])
            priorep=data['close'][i-1]
            k = 2
            if c1<=10 :
              af=af+c1*0.02
              c1=c1+1
            else:
              af=0.2
            psar.append(prevpsar+af*(priorep-prevpsar))
            prevpsar=prevpsar+af*(priorep-prevpsar)
    else:
        if k == 1:

            psar.append(prevpsar-af*(priorep-prevpsar))
            prevpsar=prevpsar-af*(priorep-prevpsar)
        else :
            hpeak.append(data['close'][i - 1])
            priorep=data['close'][i-1]
            k = 1
            if c1<=10 :
              af=af+c1*0.02
              c1=c1+1
            else:
              af=0.2
            psar.append(prevpsar-af*(priorep-prevpsar))
            prevpsar=prevpsar-af*(priorep-prevpsar)


plt.scatter(lists,psar)
plt.tight_layout()
plt.xlabel=('Date')
plt.ylabel=('Parabolic SAR')
plt.show()